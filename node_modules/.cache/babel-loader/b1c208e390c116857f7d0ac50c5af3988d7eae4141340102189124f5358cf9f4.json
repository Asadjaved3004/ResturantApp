{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathRewriter = void 0;\nconst isPlainObj = require(\"is-plain-obj\");\nconst errors_1 = require(\"./errors\");\nconst logger_1 = require(\"./logger\");\nconst logger = (0, logger_1.getInstance)();\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\nfunction createPathRewriter(rewriteConfig) {\n  let rulesCache;\n  if (!isValidRewriteConfig(rewriteConfig)) {\n    return;\n  }\n  if (typeof rewriteConfig === 'function') {\n    const customRewriteFn = rewriteConfig;\n    return customRewriteFn;\n  } else {\n    rulesCache = parsePathRewriteRules(rewriteConfig);\n    return rewritePath;\n  }\n  function rewritePath(path) {\n    let result = path;\n    for (const rule of rulesCache) {\n      if (rule.regex.test(path)) {\n        result = result.replace(rule.regex, rule.value);\n        logger.debug('[HPM] Rewriting path from \"%s\" to \"%s\"', path, result);\n        break;\n      }\n    }\n    return result;\n  }\n}\nexports.createPathRewriter = createPathRewriter;\nfunction isValidRewriteConfig(rewriteConfig) {\n  if (typeof rewriteConfig === 'function') {\n    return true;\n  } else if (isPlainObj(rewriteConfig)) {\n    return Object.keys(rewriteConfig).length !== 0;\n  } else if (rewriteConfig === undefined || rewriteConfig === null) {\n    return false;\n  } else {\n    throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n  }\n}\nfunction parsePathRewriteRules(rewriteConfig) {\n  const rules = [];\n  if (isPlainObj(rewriteConfig)) {\n    for (const [key] of Object.entries(rewriteConfig)) {\n      rules.push({\n        regex: new RegExp(key),\n        value: rewriteConfig[key]\n      });\n      logger.info('[HPM] Proxy rewrite rule created: \"%s\" ~> \"%s\"', key, rewriteConfig[key]);\n    }\n  }\n  return rules;\n}","map":{"version":3,"names":["require","Object","defineProperty","exports","value","createPathRewriter","isPlainObj","errors_1","logger_1","logger","getInstance","rewriteConfig","rulesCache","isValidRewriteConfig","customRewriteFn","parsePathRewriteRules","rewritePath","path","result","rule","regex","test","replace","debug","keys","length","undefined","Error","ERRORS","ERR_PATH_REWRITER_CONFIG","rules","key","entries","push","RegExp","info"],"sources":["/home/teresol/Documents/FrontEnd/ResturantApp/node_modules/http-proxy-middleware/dist/path-rewriter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPathRewriter = void 0;\nconst isPlainObj = require(\"is-plain-obj\");\nconst errors_1 = require(\"./errors\");\nconst logger_1 = require(\"./logger\");\nconst logger = (0, logger_1.getInstance)();\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\nfunction createPathRewriter(rewriteConfig) {\n    let rulesCache;\n    if (!isValidRewriteConfig(rewriteConfig)) {\n        return;\n    }\n    if (typeof rewriteConfig === 'function') {\n        const customRewriteFn = rewriteConfig;\n        return customRewriteFn;\n    }\n    else {\n        rulesCache = parsePathRewriteRules(rewriteConfig);\n        return rewritePath;\n    }\n    function rewritePath(path) {\n        let result = path;\n        for (const rule of rulesCache) {\n            if (rule.regex.test(path)) {\n                result = result.replace(rule.regex, rule.value);\n                logger.debug('[HPM] Rewriting path from \"%s\" to \"%s\"', path, result);\n                break;\n            }\n        }\n        return result;\n    }\n}\nexports.createPathRewriter = createPathRewriter;\nfunction isValidRewriteConfig(rewriteConfig) {\n    if (typeof rewriteConfig === 'function') {\n        return true;\n    }\n    else if (isPlainObj(rewriteConfig)) {\n        return Object.keys(rewriteConfig).length !== 0;\n    }\n    else if (rewriteConfig === undefined || rewriteConfig === null) {\n        return false;\n    }\n    else {\n        throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n    }\n}\nfunction parsePathRewriteRules(rewriteConfig) {\n    const rules = [];\n    if (isPlainObj(rewriteConfig)) {\n        for (const [key] of Object.entries(rewriteConfig)) {\n            rules.push({\n                regex: new RegExp(key),\n                value: rewriteConfig[key],\n            });\n            logger.info('[HPM] Proxy rewrite rule created: \"%s\" ~> \"%s\"', key, rewriteConfig[key]);\n        }\n    }\n    return rules;\n}\n"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,UAAU,GAAGN,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMO,QAAQ,GAAGP,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMS,MAAM,GAAG,CAAC,CAAC,EAAED,QAAQ,CAACE,WAAW,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,kBAAkBA,CAACM,aAAa,EAAE;EACvC,IAAIC,UAAU;EACd,IAAI,CAACC,oBAAoB,CAACF,aAAa,CAAC,EAAE;IACtC;EACJ;EACA,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;IACrC,MAAMG,eAAe,GAAGH,aAAa;IACrC,OAAOG,eAAe;EAC1B,CAAC,MACI;IACDF,UAAU,GAAGG,qBAAqB,CAACJ,aAAa,CAAC;IACjD,OAAOK,WAAW;EACtB;EACA,SAASA,WAAWA,CAACC,IAAI,EAAE;IACvB,IAAIC,MAAM,GAAGD,IAAI;IACjB,KAAK,MAAME,IAAI,IAAIP,UAAU,EAAE;MAC3B,IAAIO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC,EAAE;QACvBC,MAAM,GAAGA,MAAM,CAACI,OAAO,CAACH,IAAI,CAACC,KAAK,EAAED,IAAI,CAACf,KAAK,CAAC;QAC/CK,MAAM,CAACc,KAAK,CAAC,wCAAwC,EAAEN,IAAI,EAAEC,MAAM,CAAC;QACpE;MACJ;IACJ;IACA,OAAOA,MAAM;EACjB;AACJ;AACAf,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASQ,oBAAoBA,CAACF,aAAa,EAAE;EACzC,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;IACrC,OAAO,IAAI;EACf,CAAC,MACI,IAAIL,UAAU,CAACK,aAAa,CAAC,EAAE;IAChC,OAAOV,MAAM,CAACuB,IAAI,CAACb,aAAa,CAAC,CAACc,MAAM,KAAK,CAAC;EAClD,CAAC,MACI,IAAId,aAAa,KAAKe,SAAS,IAAIf,aAAa,KAAK,IAAI,EAAE;IAC5D,OAAO,KAAK;EAChB,CAAC,MACI;IACD,MAAM,IAAIgB,KAAK,CAACpB,QAAQ,CAACqB,MAAM,CAACC,wBAAwB,CAAC;EAC7D;AACJ;AACA,SAASd,qBAAqBA,CAACJ,aAAa,EAAE;EAC1C,MAAMmB,KAAK,GAAG,EAAE;EAChB,IAAIxB,UAAU,CAACK,aAAa,CAAC,EAAE;IAC3B,KAAK,MAAM,CAACoB,GAAG,CAAC,IAAI9B,MAAM,CAAC+B,OAAO,CAACrB,aAAa,CAAC,EAAE;MAC/CmB,KAAK,CAACG,IAAI,CAAC;QACPb,KAAK,EAAE,IAAIc,MAAM,CAACH,GAAG,CAAC;QACtB3B,KAAK,EAAEO,aAAa,CAACoB,GAAG;MAC5B,CAAC,CAAC;MACFtB,MAAM,CAAC0B,IAAI,CAAC,gDAAgD,EAAEJ,GAAG,EAAEpB,aAAa,CAACoB,GAAG,CAAC,CAAC;IAC1F;EACJ;EACA,OAAOD,KAAK;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}