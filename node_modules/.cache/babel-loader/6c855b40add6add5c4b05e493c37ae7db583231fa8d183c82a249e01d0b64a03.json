{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar fs = require(\"fs\");\nexports.FILES = [require.resolve(\"../lib/utils.js\"), require.resolve(\"../lib/ast.js\"), require.resolve(\"../lib/transform.js\"), require.resolve(\"../lib/parse.js\"), require.resolve(\"../lib/scope.js\"), require.resolve(\"../lib/compress.js\"), require.resolve(\"../lib/output.js\"), require.resolve(\"../lib/sourcemap.js\"), require.resolve(\"../lib/mozilla-ast.js\"), require.resolve(\"../lib/propmangle.js\"), require.resolve(\"../lib/minify.js\"), require.resolve(\"./exports.js\")];\nnew Function(\"domprops\", \"exports\", function () {\n  var code = exports.FILES.map(function (file) {\n    return fs.readFileSync(file, \"utf8\");\n  });\n  code.push(\"exports.describe_ast = \" + describe_ast.toString());\n  return code.join(\"\\n\\n\");\n}())(require(\"./domprops.json\"), exports);\nfunction to_comment(value) {\n  if (typeof value != \"string\") value = JSON.stringify(value, function (key, value) {\n    return typeof value == \"function\" ? \"<[ \" + value + \" ]>\" : value;\n  }, 2);\n  return \"// \" + value.replace(/\\n/g, \"\\n// \");\n}\nif (+process.env[\"UGLIFY_BUG_REPORT\"]) exports.minify = function (files, options) {\n  if (typeof options == \"undefined\") options = \"<<undefined>>\";\n  var code = [\"// UGLIFY_BUG_REPORT\", to_comment(options)];\n  if (typeof files == \"string\") {\n    code.push(\"\");\n    code.push(\"//-------------------------------------------------------------\");\n    code.push(\"// INPUT CODE\", files);\n  } else for (var name in files) {\n    code.push(\"\");\n    code.push(\"//-------------------------------------------------------------\");\n    code.push(to_comment(name), files[name]);\n  }\n  if (options.sourceMap && options.sourceMap.url) {\n    code.push(\"\");\n    code.push(\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiJ9\");\n  }\n  var result = {\n    code: code.join(\"\\n\")\n  };\n  if (options.sourceMap) result.map = '{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}';\n  return result;\n};\nfunction describe_ast() {\n  var out = OutputStream({\n    beautify: true\n  });\n  doitem(AST_Node);\n  return out.get() + \"\\n\";\n  function doitem(ctor) {\n    out.print(\"AST_\" + ctor.TYPE);\n    var props = ctor.SELF_PROPS.filter(function (prop) {\n      return !/^\\$/.test(prop);\n    });\n    if (props.length > 0) {\n      out.space();\n      out.with_parens(function () {\n        props.forEach(function (prop, i) {\n          if (i) out.space();\n          out.print(prop);\n        });\n      });\n    }\n    if (ctor.documentation) {\n      out.space();\n      out.print_string(ctor.documentation);\n    }\n    if (ctor.SUBCLASSES.length > 0) {\n      out.space();\n      out.with_block(function () {\n        ctor.SUBCLASSES.sort(function (a, b) {\n          return a.TYPE < b.TYPE ? -1 : 1;\n        }).forEach(function (ctor, i) {\n          out.indent();\n          doitem(ctor);\n          out.newline();\n        });\n      });\n    }\n  }\n}\nfunction infer_options(options) {\n  var result = exports.minify(\"\", options);\n  return result.error && result.error.defs;\n}\nexports.default_options = function () {\n  var defs = infer_options({\n    0: 0\n  });\n  Object.keys(defs).forEach(function (component) {\n    var options = {};\n    options[component] = {\n      0: 0\n    };\n    if (options = infer_options(options)) {\n      defs[component] = options;\n    }\n  });\n  return defs;\n};","map":{"version":3,"names":["fs","require","exports","FILES","resolve","Function","code","map","file","readFileSync","push","describe_ast","toString","join","to_comment","value","JSON","stringify","key","replace","process","env","minify","files","options","name","sourceMap","url","result","out","OutputStream","beautify","doitem","AST_Node","get","ctor","print","TYPE","props","SELF_PROPS","filter","prop","test","length","space","with_parens","forEach","i","documentation","print_string","SUBCLASSES","with_block","sort","a","b","indent","newline","infer_options","error","defs","default_options","Object","keys","component"],"sources":["/home/teresol/node_modules/uglify-js/tools/node.js"],"sourcesContent":["var fs = require(\"fs\");\n\nexports.FILES = [\n    require.resolve(\"../lib/utils.js\"),\n    require.resolve(\"../lib/ast.js\"),\n    require.resolve(\"../lib/transform.js\"),\n    require.resolve(\"../lib/parse.js\"),\n    require.resolve(\"../lib/scope.js\"),\n    require.resolve(\"../lib/compress.js\"),\n    require.resolve(\"../lib/output.js\"),\n    require.resolve(\"../lib/sourcemap.js\"),\n    require.resolve(\"../lib/mozilla-ast.js\"),\n    require.resolve(\"../lib/propmangle.js\"),\n    require.resolve(\"../lib/minify.js\"),\n    require.resolve(\"./exports.js\"),\n];\n\nnew Function(\"domprops\", \"exports\", function() {\n    var code = exports.FILES.map(function(file) {\n        return fs.readFileSync(file, \"utf8\");\n    });\n    code.push(\"exports.describe_ast = \" + describe_ast.toString());\n    return code.join(\"\\n\\n\");\n}())(require(\"./domprops.json\"), exports);\n\nfunction to_comment(value) {\n    if (typeof value != \"string\") value = JSON.stringify(value, function(key, value) {\n        return typeof value == \"function\" ? \"<[ \" + value + \" ]>\" : value;\n    }, 2);\n    return \"// \" + value.replace(/\\n/g, \"\\n// \");\n}\n\nif (+process.env[\"UGLIFY_BUG_REPORT\"]) exports.minify = function(files, options) {\n    if (typeof options == \"undefined\") options = \"<<undefined>>\";\n    var code = [\n        \"// UGLIFY_BUG_REPORT\",\n        to_comment(options),\n    ];\n    if (typeof files == \"string\") {\n        code.push(\"\");\n        code.push(\"//-------------------------------------------------------------\")\n        code.push(\"// INPUT CODE\", files);\n    } else for (var name in files) {\n        code.push(\"\");\n        code.push(\"//-------------------------------------------------------------\")\n        code.push(to_comment(name), files[name]);\n    }\n    if (options.sourceMap && options.sourceMap.url) {\n        code.push(\"\");\n        code.push(\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiJ9\");\n    }\n    var result = { code: code.join(\"\\n\") };\n    if (options.sourceMap) result.map = '{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}';\n    return result;\n};\n\nfunction describe_ast() {\n    var out = OutputStream({ beautify: true });\n    doitem(AST_Node);\n    return out.get() + \"\\n\";\n\n    function doitem(ctor) {\n        out.print(\"AST_\" + ctor.TYPE);\n        var props = ctor.SELF_PROPS.filter(function(prop) {\n            return !/^\\$/.test(prop);\n        });\n        if (props.length > 0) {\n            out.space();\n            out.with_parens(function() {\n                props.forEach(function(prop, i) {\n                    if (i) out.space();\n                    out.print(prop);\n                });\n            });\n        }\n        if (ctor.documentation) {\n            out.space();\n            out.print_string(ctor.documentation);\n        }\n        if (ctor.SUBCLASSES.length > 0) {\n            out.space();\n            out.with_block(function() {\n                ctor.SUBCLASSES.sort(function(a, b) {\n                    return a.TYPE < b.TYPE ? -1 : 1;\n                }).forEach(function(ctor, i) {\n                    out.indent();\n                    doitem(ctor);\n                    out.newline();\n                });\n            });\n        }\n    }\n}\n\nfunction infer_options(options) {\n    var result = exports.minify(\"\", options);\n    return result.error && result.error.defs;\n}\n\nexports.default_options = function() {\n    var defs = infer_options({ 0: 0 });\n    Object.keys(defs).forEach(function(component) {\n        var options = {};\n        options[component] = { 0: 0 };\n        if (options = infer_options(options)) {\n            defs[component] = options;\n        }\n    });\n    return defs;\n};\n"],"mappings":";AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtBC,OAAO,CAACC,KAAK,GAAG,CACZF,OAAO,CAACG,OAAO,CAAC,iBAAiB,CAAC,EAClCH,OAAO,CAACG,OAAO,CAAC,eAAe,CAAC,EAChCH,OAAO,CAACG,OAAO,CAAC,qBAAqB,CAAC,EACtCH,OAAO,CAACG,OAAO,CAAC,iBAAiB,CAAC,EAClCH,OAAO,CAACG,OAAO,CAAC,iBAAiB,CAAC,EAClCH,OAAO,CAACG,OAAO,CAAC,oBAAoB,CAAC,EACrCH,OAAO,CAACG,OAAO,CAAC,kBAAkB,CAAC,EACnCH,OAAO,CAACG,OAAO,CAAC,qBAAqB,CAAC,EACtCH,OAAO,CAACG,OAAO,CAAC,uBAAuB,CAAC,EACxCH,OAAO,CAACG,OAAO,CAAC,sBAAsB,CAAC,EACvCH,OAAO,CAACG,OAAO,CAAC,kBAAkB,CAAC,EACnCH,OAAO,CAACG,OAAO,CAAC,cAAc,CAAC,CAClC;AAED,IAAIC,QAAQ,CAAC,UAAU,EAAE,SAAS,EAAE,YAAW;EAC3C,IAAIC,IAAI,GAAGJ,OAAO,CAACC,KAAK,CAACI,GAAG,CAAC,UAASC,IAAI,EAAE;IACxC,OAAOR,EAAE,CAACS,YAAY,CAACD,IAAI,EAAE,MAAM,CAAC;EACxC,CAAC,CAAC;EACFF,IAAI,CAACI,IAAI,CAAC,yBAAyB,GAAGC,YAAY,CAACC,QAAQ,EAAE,CAAC;EAC9D,OAAON,IAAI,CAACO,IAAI,CAAC,MAAM,CAAC;AAC5B,CAAC,EAAE,CAAC,CAACZ,OAAO,CAAC,iBAAiB,CAAC,EAAEC,OAAO,CAAC;AAEzC,SAASY,UAAUA,CAACC,KAAK,EAAE;EACvB,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAEA,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACF,KAAK,EAAE,UAASG,GAAG,EAAEH,KAAK,EAAE;IAC7E,OAAO,OAAOA,KAAK,IAAI,UAAU,GAAG,KAAK,GAAGA,KAAK,GAAG,KAAK,GAAGA,KAAK;EACrE,CAAC,EAAE,CAAC,CAAC;EACL,OAAO,KAAK,GAAGA,KAAK,CAACI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC;AAChD;AAEA,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAEnB,OAAO,CAACoB,MAAM,GAAG,UAASC,KAAK,EAAEC,OAAO,EAAE;EAC7E,IAAI,OAAOA,OAAO,IAAI,WAAW,EAAEA,OAAO,GAAG,eAAe;EAC5D,IAAIlB,IAAI,GAAG,CACP,sBAAsB,EACtBQ,UAAU,CAACU,OAAO,CAAC,CACtB;EACD,IAAI,OAAOD,KAAK,IAAI,QAAQ,EAAE;IAC1BjB,IAAI,CAACI,IAAI,CAAC,EAAE,CAAC;IACbJ,IAAI,CAACI,IAAI,CAAC,iEAAiE,CAAC;IAC5EJ,IAAI,CAACI,IAAI,CAAC,eAAe,EAAEa,KAAK,CAAC;EACrC,CAAC,MAAM,KAAK,IAAIE,IAAI,IAAIF,KAAK,EAAE;IAC3BjB,IAAI,CAACI,IAAI,CAAC,EAAE,CAAC;IACbJ,IAAI,CAACI,IAAI,CAAC,iEAAiE,CAAC;IAC5EJ,IAAI,CAACI,IAAI,CAACI,UAAU,CAACW,IAAI,CAAC,EAAEF,KAAK,CAACE,IAAI,CAAC,CAAC;EAC5C;EACA,IAAID,OAAO,CAACE,SAAS,IAAIF,OAAO,CAACE,SAAS,CAACC,GAAG,EAAE;IAC5CrB,IAAI,CAACI,IAAI,CAAC,EAAE,CAAC;IACbJ,IAAI,CAACI,IAAI,CAAC,sIAAsI,CAAC;EACrJ;EACA,IAAIkB,MAAM,GAAG;IAAEtB,IAAI,EAAEA,IAAI,CAACO,IAAI,CAAC,IAAI;EAAE,CAAC;EACtC,IAAIW,OAAO,CAACE,SAAS,EAAEE,MAAM,CAACrB,GAAG,GAAG,qDAAqD;EACzF,OAAOqB,MAAM;AACjB,CAAC;AAED,SAASjB,YAAYA,CAAA,EAAG;EACpB,IAAIkB,GAAG,GAAGC,YAAY,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAC1CC,MAAM,CAACC,QAAQ,CAAC;EAChB,OAAOJ,GAAG,CAACK,GAAG,EAAE,GAAG,IAAI;EAEvB,SAASF,MAAMA,CAACG,IAAI,EAAE;IAClBN,GAAG,CAACO,KAAK,CAAC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAAC;IAC7B,IAAIC,KAAK,GAAGH,IAAI,CAACI,UAAU,CAACC,MAAM,CAAC,UAASC,IAAI,EAAE;MAC9C,OAAO,CAAC,KAAK,CAACC,IAAI,CAACD,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAIH,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MAClBd,GAAG,CAACe,KAAK,EAAE;MACXf,GAAG,CAACgB,WAAW,CAAC,YAAW;QACvBP,KAAK,CAACQ,OAAO,CAAC,UAASL,IAAI,EAAEM,CAAC,EAAE;UAC5B,IAAIA,CAAC,EAAElB,GAAG,CAACe,KAAK,EAAE;UAClBf,GAAG,CAACO,KAAK,CAACK,IAAI,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA,IAAIN,IAAI,CAACa,aAAa,EAAE;MACpBnB,GAAG,CAACe,KAAK,EAAE;MACXf,GAAG,CAACoB,YAAY,CAACd,IAAI,CAACa,aAAa,CAAC;IACxC;IACA,IAAIb,IAAI,CAACe,UAAU,CAACP,MAAM,GAAG,CAAC,EAAE;MAC5Bd,GAAG,CAACe,KAAK,EAAE;MACXf,GAAG,CAACsB,UAAU,CAAC,YAAW;QACtBhB,IAAI,CAACe,UAAU,CAACE,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAE;UAChC,OAAOD,CAAC,CAAChB,IAAI,GAAGiB,CAAC,CAACjB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;QACnC,CAAC,CAAC,CAACS,OAAO,CAAC,UAASX,IAAI,EAAEY,CAAC,EAAE;UACzBlB,GAAG,CAAC0B,MAAM,EAAE;UACZvB,MAAM,CAACG,IAAI,CAAC;UACZN,GAAG,CAAC2B,OAAO,EAAE;QACjB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ;AACJ;AAEA,SAASC,aAAaA,CAACjC,OAAO,EAAE;EAC5B,IAAII,MAAM,GAAG1B,OAAO,CAACoB,MAAM,CAAC,EAAE,EAAEE,OAAO,CAAC;EACxC,OAAOI,MAAM,CAAC8B,KAAK,IAAI9B,MAAM,CAAC8B,KAAK,CAACC,IAAI;AAC5C;AAEAzD,OAAO,CAAC0D,eAAe,GAAG,YAAW;EACjC,IAAID,IAAI,GAAGF,aAAa,CAAC;IAAE,CAAC,EAAE;EAAE,CAAC,CAAC;EAClCI,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACb,OAAO,CAAC,UAASiB,SAAS,EAAE;IAC1C,IAAIvC,OAAO,GAAG,CAAC,CAAC;IAChBA,OAAO,CAACuC,SAAS,CAAC,GAAG;MAAE,CAAC,EAAE;IAAE,CAAC;IAC7B,IAAIvC,OAAO,GAAGiC,aAAa,CAACjC,OAAO,CAAC,EAAE;MAClCmC,IAAI,CAACI,SAAS,CAAC,GAAGvC,OAAO;IAC7B;EACJ,CAAC,CAAC;EACF,OAAOmC,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}